---
import Layout from '../layouts/Layout.astro';
import SynapseReveal from '../components/SynapseReveal.astro';

const base = import.meta.env.BASE_URL;
---

<Layout title="arsomnia">
	<!-- Hero Section -->
	<section id="inicio" class="hero">
		<SynapseReveal />
		<div class="container hero-content" id="hero-content">
			<h1 class="hero-title" id="hero-title">
				Digitalizo tu proyecto creativo<br />
			</h1>
			<p class="hero-subtitle" id="hero-subtitle">
				Creo espacios digitales únicos para artistas y creativos, traduciendo<br />
				fielmente tu estética en experiencias web orgánicas.
			</p>
			<div class="hero-buttons">
				<a href="#proyectos" class="btn btn-primary">
					Ver Proyectos
					<svg width="20" height="20" viewBox="0 0 20 20" fill="none">
						<path d="M7.5 15L12.5 10L7.5 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
					</svg>
				</a>
				<a href="#contacto" class="btn btn-secondary">Contactar</a>
			</div>
		</div>
	</section>

	<script>
		// Efecto líquido puntual: solo afecta letras cerca del cursor
		const hero = document.getElementById('inicio');
		const heroTitle = document.getElementById('hero-title');
		const heroSubtitle = document.getElementById('hero-subtitle');
		let lastMouseMove = 0;
		let animationId = 0;
		
		// Dividir texto en caracteres para efecto puntual (respetando espacios)
		function wrapChars(el: HTMLElement | null) {
			if (!el || el.dataset.wrapped === '1') return;
			const text = el.textContent || '';
			el.innerHTML = '';
			el.dataset.wrapped = '1';
			
			for (const char of text) {
				if (char === '\n') {
					el.appendChild(document.createElement('br'));
					continue;
				}
				if (char === ' ') {
					el.appendChild(document.createTextNode(' '));
					continue;
				}
				const span = document.createElement('span');
				span.className = 'char';
				span.textContent = char;
				span.style.display = 'inline-block';
				span.style.willChange = 'transform, filter';
				el.appendChild(span);
			}
		}
		
		wrapChars(heroTitle);
		wrapChars(heroSubtitle);
		
		const chars = [
			...Array.from(heroTitle?.querySelectorAll('.char') || []) as HTMLElement[],
			...Array.from(heroSubtitle?.querySelectorAll('.char') || []) as HTMLElement[]
		];
		
		let mouseX = -1000;
		let mouseY = -1000;
		
		function updateLiquidEffect() {
			const now = performance.now();
			const timeSinceMove = now - lastMouseMove;
			
			// Efecto puntual SOLO en caracteres cerca del cursor
			const INFLUENCE_RADIUS = 120; // Radio de influencia aumentado
			const MAX_DISTORTION = 1.0; // Intensidad de la distorsión
			
			chars.forEach(char => {
				const rect = char.getBoundingClientRect();
				const charX = rect.left + rect.width / 2;
				const charY = rect.top + rect.height / 2;
				
				const dx = charX - mouseX;
				const dy = charY - mouseY;
				const distance = Math.sqrt(dx * dx + dy * dy);
				
				if (distance < INFLUENCE_RADIUS && timeSinceMove < 2000) {
					// Calcular influencia: 1 cuando está en el centro, 0 en el borde
					const influence = 1 - (distance / INFLUENCE_RADIUS);
					const distortion = influence * MAX_DISTORTION;
					
					// Empujar las letras hacia afuera desde el cursor (efecto de repulsión)
					const offsetX = (dx / distance) * distortion * 8; // Mayor desplazamiento
					const offsetY = (dy / distance) * distortion * 8; // Mayor desplazamiento
					const blur = influence * 1.5; // Mayor desenfoque
					
					char.style.transform = `translate(${offsetX}px, ${offsetY}px)`;
					char.style.filter = `blur(${blur}px)`;
				} else {
					// Letras fuera del radio o sin movimiento reciente
					char.style.transform = 'none';
					char.style.filter = 'none';
				}
			});
			
			// Continuar animando solo si el cursor se movió recientemente
			if (timeSinceMove < 2500) {
				animationId = requestAnimationFrame(updateLiquidEffect);
			} else {
				animationId = 0;
			}
		}
		
		if (hero) {
			// NO aplicar filtro SVG al contenido (solo efecto puntual en caracteres)
			
			hero.addEventListener('mousemove', (e: MouseEvent) => {
				mouseX = e.clientX;
				mouseY = e.clientY;
				lastMouseMove = performance.now();
				
				if (!animationId) {
					animationId = requestAnimationFrame(updateLiquidEffect);
				}
			}, { passive: true });
			
			hero.addEventListener('mouseleave', () => {
				mouseX = -1000;
				mouseY = -1000;
			}, { passive: true });
		}
	</script>

	<!-- About Section -->
	<section id="acerca" class="about">
		<div class="container">
			<div class="about-content">
				<div class="about-text">
					<h2 class="section-title">
						Transformo tu visión<br />
						creativa en presencia<br />
						digital
					</h2>
					<p class="about-description">
						Me especializo en crear portfolios web y experiencias digitales para artistas y creativos.
					</p>
					<p class="about-description">
						Cada artista tiene una voz única. Por eso, trabajo 
						estrechamente contigo para capturar la esencia de tu identidad visual y 
						traducirla en una experiencia digital coherente y memorable.
					</p>
				</div>
				<div class="about-features">
					<div class="feature-card">
						<div class="feature-icon">
							<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
								<path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z" fill="currentColor"/>
							</svg>
						</div>
						<h3 class="feature-title">Diseño Personalizado</h3>
						<p class="feature-text">
							Cada proyecto es único, diseñado específicamente para reflejar la 
							identidad visual del artista.
						</p>
					</div>
					<div class="feature-card">
						<div class="feature-icon">
							<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
								<path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" fill="currentColor"/>
							</svg>
						</div>
						<h3 class="feature-title">Visibilidad Estratégica</h3>
						<p class="feature-text">
							Optimización de la presentación de tu trabajo para maximizar el impacto y 
							alcance de tu proyecto.
						</p>
					</div>
					<div class="feature-card">
						<div class="feature-icon">
							<svg width="24" height="24" viewBox="0 0 24 24" fill="none">
								<path d="M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z" fill="currentColor"/>
							</svg>
						</div>
						<h3 class="feature-title">Estética Orgánica</h3>
						<p class="feature-text">
							Creación de espacios limpios y orgánicos donde tu arte es siempre el protagonista.
						</p>
					</div>
				</div>
			</div>
		</div>
	</section>

	<!-- Projects Section -->
	<section id="proyectos" class="projects">
		<div class="container">
			<div class="section-header">
				<h2 class="section-title-center">Proyectos Destacados</h2>
				<p class="section-subtitle">
					Una selección de proyectos que he creado para artistas y creativos
				</p>
			</div>
		<div class="projects-grid">
			<a href="https://www.elnectar.io/" target="_blank" rel="noopener noreferrer" class="project-card">
				<div class="project-image" style={`background-image: url('${base}/nectario.png');`}>
				</div>
				<div class="project-info">
					<div class="project-header">
						<div>
							<h3 class="project-name">El nectario</h3>
							<p class="project-category">Blog de escritura</p>
						</div>
						<svg width="20" height="20" viewBox="0 0 20 20" fill="none">
							<path d="M5 15L15 5M15 5H8M15 5V12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
					</div>
					<p class="project-description">
						Portfolio de relatos con enfoque en la experiencia de lectura. Diseño minimalista y colores armónicos con el estilo del autor.
					</p>
				</div>
			</a>
			<a href="https://www.buscando-a-hopper.com/" target="_blank" rel="noopener noreferrer" class="project-card">
				<div class="project-image" style={`background-image: url('${base}/hopper.png');`}>
				</div>
				<div class="project-info">
					<div class="project-header">
						<div>
							<h3 class="project-name">Buscando a Hopper</h3>
							<p class="project-category">Proyecto de fotografía</p>
						</div>
						<svg width="20" height="20" viewBox="0 0 20 20" fill="none">
							<path d="M5 15L15 5M15 5H8M15 5V12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
					</div>
					<p class="project-description">
						Portfolio fotográfico que resalta el diálogo visual entre el fotógrafo y su principal inspiración artística: Edward Hopper.
					</p>
				</div>
			</a>
			<a href="https://vagari.world/" target="_blank" rel="noopener noreferrer" class="project-card">
				<div class="project-image" style={`background-image: url('${base}/vagari.jpg');`}>
				</div>
				<div class="project-info">
					<div class="project-header">
						<div>
							<h3 class="project-name">Vagari</h3>
							<p class="project-category">Experiencia inmersiva</p>
						</div>
						<svg width="20" height="20" viewBox="0 0 20 20" fill="none">
							<path d="M5 15L15 5M15 5H8M15 5V12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
						</svg>
					</div>
					<p class="project-description">
						Experiencia inmersiva de viajes virtuales con enfoque en la navegación intuitiva y el rendimiento de las consultas.
					</p>
				</div>
			</a>
		</div>
		</div>
	</section>

	<!-- Contact Section -->
	<section id="contacto" class="contact">
		<div class="container">
			<div class="contact-content">
				<div class="contact-header">
					<h2 class="section-title-center">Hablemos de tu proyecto</h2>
					<p class="section-subtitle">
						¿Creamos algo increíble?
					</p>
				</div>

				<form class="contact-form">
					<div class="form-row">
						<div class="form-group">
							<label for="name">Nombre</label>
							<input type="text" id="name" name="name" placeholder="Tu nombre" required />
						</div>
						<div class="form-group">
							<label for="email">Email</label>
							<input type="email" id="email" name="email" placeholder="tu@email.com" required />
						</div>
					</div>
					<div class="form-group">
						<label for="project-type">Tipo de Proyecto</label>
						<select id="project-type" name="project-type" required>
							<option value="">Selecciona una opción</option>
							<option value="portfolio">Portfolio Personal</option>
							<option value="corporate">Sitio Corporativo</option>
							<option value="ecommerce">E-commerce</option>
							<option value="other">Otro</option>
						</select>
					</div>
					<div class="form-group">
						<label for="message">Mensaje</label>
						<textarea id="message" name="message" rows="6" placeholder="Cuéntame sobre tu proyecto..." required></textarea>
					</div>
					<button type="submit" class="btn btn-primary btn-full">Enviar Mensaje</button>
				</form>
			</div>
		</div>
	</section>

	<!-- Footer -->
	<footer class="footer">
		<div class="container">
			<div class="footer-content">
				<p class="footer-text">© 2025 arsomnia</p>
			</div>
		</div>
	</footer>
</Layout>

<style>
	.container {
		max-width: 1400px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	/* Hero Section */
	.hero {
		min-height: 90vh;
		display: flex;
		align-items: center;
		justify-content: center;
		text-align: center;
		padding: 4rem 0;
		position: relative;
		overflow: hidden;
		contain: layout style paint;
	}

	.hero-content {
		position: relative;
		z-index: 10;
	}

	.hero-title {
		font-size: 5rem;
		font-weight: 700;
		line-height: 1.1;
		margin-bottom: 2rem;
		color: var(--color-text);
	}

	.hero-title .char {
		display: inline-block;
		transition: transform 0.1s ease, filter 0.1s ease;
	}

	.hero-title-accent {
		color: var(--color-accent);
	}

	.hero-subtitle {
		font-size: 1.25rem;
		color: var(--color-text-light);
		margin-bottom: 3rem;
		line-height: 1.8;
	}

	.hero-subtitle .char {
		display: inline-block;
		transition: transform 0.1s ease, filter 0.1s ease;
	}

	.hero-buttons {
		display: flex;
		gap: 1.5rem;
		justify-content: center;
		align-items: center;
	}

	.btn {
		padding: 1rem 2rem;
		border-radius: 8px;
		text-decoration: none;
		font-weight: 500;
		font-size: 1rem;
		transition: all 0.3s ease;
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
		border: none;
		cursor: pointer;
		will-change: transform;
	}

	.btn-primary {
		background: var(--color-accent);
		color: var(--color-bg);
		font-weight: 600;
	}

	.btn-primary:hover {
		background: #B8962E;
		color: var(--color-bg);
		transform: translateY(-2px);
		box-shadow: 0 8px 16px rgba(212, 175, 55, 0.4);
	}

	.btn-secondary {
		background: transparent;
		color: var(--color-text);
		border: 2px solid var(--color-accent);
	}

	.btn-secondary:hover {
		background: var(--color-accent);
		color: var(--color-bg);
		box-shadow: 0 8px 16px rgba(212, 175, 55, 0.3);
	}

	.btn-full {
		width: 100%;
		justify-content: center;
	}

	/* About Section */
	.about {
		padding: 8rem 0;
		background: var(--color-bg-secondary);
	}

	.about-content {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 6rem;
		align-items: start;
	}

	.section-title {
		font-size: 3.5rem;
		font-weight: 700;
		line-height: 1.2;
		margin-bottom: 2rem;
		color: var(--color-text);
	}

	.about-description {
		font-size: 1.1rem;
		color: var(--color-text-light);
		margin-bottom: 1.5rem;
		line-height: 1.8;
	}

	.about-features {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.feature-card {
		background: var(--color-accent-secondary);
		padding: 2rem;
		border-radius: 12px;
		transition: transform 0.3s ease;
		border: 1px solid rgba(212, 175, 55, 0.1);
		will-change: transform;
	}

	.feature-card:hover {
		transform: translateY(-4px);
		border-color: rgba(212, 175, 55, 0.3);
		box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
	}

	.feature-icon {
		width: 48px;
		height: 48px;
		background: var(--color-accent);
		color: var(--color-bg);
		border-radius: 8px;
		display: flex;
		align-items: center;
		justify-content: center;
		margin-bottom: 1rem;
	}

	.feature-title {
		font-size: 1.25rem;
		font-weight: 600;
		margin-bottom: 0.75rem;
		color: var(--color-text);
	}

	.feature-text {
		font-size: 1rem;
		color: var(--color-text-light);
		line-height: 1.6;
	}

	/* Projects Section */
	.projects {
		padding: 8rem 0;
	}

	.section-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.section-title-center {
		font-size: 3.5rem;
		font-weight: 700;
		margin-bottom: 1rem;
		color: var(--color-text);
	}

	.section-subtitle {
		font-size: 1.2rem;
		color: var(--color-text-light);
	}

	.projects-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 2rem;
	}

	.project-card {
		background: var(--color-bg-secondary);
		border-radius: 16px;
		overflow: hidden;
		transition: transform 0.3s ease, box-shadow 0.3s ease;
		cursor: pointer;
		text-decoration: none;
		color: inherit;
		display: block;
		border: 1px solid rgba(212, 175, 55, 0.1);
		will-change: transform;
	}

	.project-card:hover {
		transform: translateY(-8px);
		box-shadow: 0 20px 40px rgba(0, 0, 0, 0.6);
		border-color: rgba(212, 175, 55, 0.3);
	}

	.project-image {
		height: 300px;
		display: flex;
		align-items: center;
		justify-content: center;
		color: rgba(255, 255, 255, 0.5);
		background-size: cover;
		background-position: center;
	}

	.project-placeholder {
		opacity: 0.5;
	}

	.project-info {
		padding: 2rem;
	}

	.project-header {
		display: flex;
		justify-content: space-between;
		align-items: start;
		margin-bottom: 1rem;
	}

	.project-name {
		font-size: 1.25rem;
		font-weight: 600;
		margin-bottom: 0.25rem;
		color: var(--color-text);
	}

	.project-category {
		font-size: 0.95rem;
		color: var(--color-accent);
		margin-bottom: 0.5rem;
	}

	.project-description {
		font-size: 0.95rem;
		color: var(--color-text-light);
		line-height: 1.6;
	}

	/* Contact Section */
	.contact {
		padding: 8rem 0;
		background: var(--color-bg-secondary);
	}

	.contact-content {
		max-width: 900px;
		margin: 0 auto;
	}

	.contact-header {
		text-align: center;
		margin-bottom: 4rem;
	}

	.contact-info-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 2rem;
		margin-bottom: 4rem;
	}

	.contact-info-card {
		text-align: center;
		padding: 2rem;
		background: var(--color-accent-secondary);
		border-radius: 12px;
		border: 1px solid rgba(212, 175, 55, 0.1);
	}

	.contact-info-icon {
		width: 56px;
		height: 56px;
		background: var(--color-accent);
		color: var(--color-bg);
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		margin: 0 auto 1rem;
	}

	.contact-info-card h3 {
		font-size: 1.1rem;
		font-weight: 600;
		margin-bottom: 0.5rem;
		color: var(--color-text);
	}

	.contact-info-card p {
		font-size: 0.95rem;
		color: var(--color-text-light);
	}

	.contact-form {
		background: var(--color-accent-secondary);
		padding: 3rem;
		border-radius: 16px;
		border: 1px solid rgba(212, 175, 55, 0.1);
	}

	.form-row {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1.5rem;
		margin-bottom: 1.5rem;
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	.form-group label {
		display: block;
		font-weight: 500;
		margin-bottom: 0.5rem;
		color: var(--color-text);
	}

	.form-group input,
	.form-group select,
	.form-group textarea {
		width: 100%;
		padding: 1rem;
		border: 1px solid rgba(212, 175, 55, 0.2);
		border-radius: 8px;
		font-size: 1rem;
		font-family: var(--font-main);
		background: var(--color-bg);
		color: var(--color-text);
		transition: border-color 0.3s ease;
	}

	.form-group input:focus,
	.form-group select:focus,
	.form-group textarea:focus {
		outline: none;
		border-color: var(--color-accent);
	}

	.form-group textarea {
		resize: vertical;
	}

	/* Footer */
	.footer {
		padding: 3rem 0;
		border-top: 1px solid rgba(212, 175, 55, 0.2);
	}

	.footer-content {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.footer-text {
		color: var(--color-text-light);
		font-size: 0.95rem;
	}

	.footer-links {
		display: flex;
		gap: 2rem;
	}

	.footer-links a {
		color: var(--color-text-light);
		text-decoration: none;
		font-size: 0.95rem;
		transition: color 0.3s ease;
	}

	.footer-links a:hover {
		color: var(--color-accent);
	}

	/* Responsive Design */
	@media (max-width: 1024px) {
		.hero-title {
			font-size: 4rem;
		}

		.section-title,
		.section-title-center {
			font-size: 2.5rem;
		}

		.about-content {
			gap: 4rem;
		}

		.projects-grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	@media (max-width: 768px) {
		.container {
			padding: 0 1.5rem;
		}

		.hero {
			min-height: 80vh;
			padding: 3rem 0;
		}

		.hero-title {
			font-size: 2.5rem;
		}

		.hero-subtitle {
			font-size: 1.1rem;
		}

		.hero-subtitle br {
			display: none;
		}

		.hero-buttons {
			flex-direction: column;
			width: 100%;
		}

		.btn {
			width: 100%;
			justify-content: center;
		}

		.about {
			padding: 5rem 0;
		}

		.about-content {
			grid-template-columns: 1fr;
			gap: 3rem;
		}

		.section-title,
		.section-title-center {
			font-size: 2rem;
		}

		.projects {
			padding: 5rem 0;
		}

		.projects-grid {
			grid-template-columns: 1fr;
		}

		.contact {
			padding: 5rem 0;
		}

		.contact-info-grid {
			grid-template-columns: 1fr;
			gap: 1.5rem;
		}

		.contact-form {
			padding: 2rem 1.5rem;
		}

		.form-row {
			grid-template-columns: 1fr;
		}

		.footer-content {
			flex-direction: column;
			gap: 1.5rem;
			text-align: center;
		}

		.footer-links {
			flex-direction: column;
			gap: 1rem;
		}
	}

	@media (max-width: 480px) {
		.hero-title {
			font-size: 2rem;
		}

		.hero-subtitle {
			font-size: 1rem;
		}

		.section-title,
		.section-title-center {
			font-size: 1.75rem;
		}

		.project-image {
			height: 200px;
		}
	}
</style>
